[Simulator]
## Seedvalue for the same random sequence
## Different number creates a different random sequence
seedvalue = 1005452923949099817
#12

## Maximum round number in swarm-world
max_round = 15000

## 1 = Call of particles in randmom order
## 0 = Call of particles in added order in scenario
particle_random_order = True
## 1/True = Call of particles in randmom order after each round
## 0/False = Call of particles in randmom order only once at the start of the simulator
particle_random_order_always = True
## Viewing window size in pixels
window_size_x = 600
window_size_y = 800

[Visualization]
# Visualization 1 = On, 0 = Off
visualization = 1

#gui
gui = default_gui


# Grid Configs. uncomment your choice!

;# Quadratic Grid grid default configs:
;grid_class = QuadraticGrid
;# .obj (Wavefront) filenames in lib/visualization/models
;particle_model_file = 2d_particle.obj
;tile_model_file = 2d_quad_tile.obj
;location_model_file = 2d_location.obj
;grid_size = 1000
;# end of Quadratic grid configs


# Triangular grid default configs:
grid_class = TriangularGrid
# .obj (Wavefront) filenames in lib/visualization/models
particle_model_file = 2d_particle.obj
tile_model_file = 2d_hex_tile.obj
location_model_file = 2d_location.obj
grid_size = 100
# end of Triangular grid configs


;# cubic grid default configs:
;grid_class = CubicGrid
;particle_model_file = 3d_particle_low_poly.obj
;tile_model_file = 3d_cube_tile.obj
;location_model_file = 3d_location.obj
;grid_size = 10
;# end of cubic grid configs

;
;# ccp grid default configs:
;grid_class = CCPGrid
;particle_model_file = 3d_particle.obj
;tile_model_file = 3d_ccp_tile.obj
;location_model_file = 3d_location.obj
;grid_size = 10
;# end of ccp grid configs
;

# matter default colors (rgba)
particle_color = (0.8, 0.3, 0.3, 1.0)
particle_scaling = (1.0, 1.0, 1.0)

tile_color = (0.3, 0.3, 0.8, 1.0)
tile_scaling = (1.0, 1.0, 1.0)

location_color = (0.3, 0.8, 0.3, 1.0)
location_scaling = (1.2, 1.2, 1.2)

grid_color = (0.0, 0.0, 0.0, 1.0)
cursor_color = (0.5, 0.5, 0.5, 0.5)
center_color = (1.0, 0.0, 0.0, 0.5)


# background  (rgb)
background_color = (1.0, 1.0, 1.0)
# color of grid lines (rgba)
line_color = (0.0, 0.0, 0.0, 1.0)
# length/scaling of the grid lines (max should be 1,1,1)
line_scaling = (1.0, 1.0, 1.0)
# flag for showing the lines
show_lines = True
# color of grid coordinates (rgba)
coordinates_color = (0.0, 0.0, 0.0, 1.0)
# size/scaling of the coordinate model. wouldn't make it bigger than 0.2, 0.2, 0.2
coordinates_scaling = (0.05, 0.05, 0.05)
# flag for showing the coordinate models
show_coordinates = False
# flag for showing the center of the grid
show_center = True
# camera focus color
focus_color = (1.0, 1.0, 1.0, 0.5)
# show camera focus
show_focus = False

# turns the rendering of the border on and off
#works only with the border flag set to True
show_border = True
# color of the border lines
border_color = (1.0, 0.0, 0.0, 1.0)


# Camera init values
look_at = (0.0, 0.0, 0.0)
phi = -90
theta = 0
radius = 10
fov = 40
cursor_offset = -10
render_distance = 1000

[World]
## False = Unlimited world size
## True = limited world size
border = False

## Swarm-World world size in points
## Works only with border flag set on True
size_x = 50.0
size_y = 50.0
size_z = 50.0

## Swarm-World Type Flat=0 Mirrored =1
## Works only with border flag set on True
type = 0


## Maximum number of particles that can be created while simulating
max_particles = 20000
init_particle_count = 20
particle_fail_quote = 0

[Matter]
## with memory (mm) limitation 1=Yes 0=No
memory_limitation = False

## mm size in quantity
## Works only with memory_limitation flag set on 1
particle_mm_size = 2
tile_mm_size = 2
location_mm_size = 2

[File]

#Kalman Coating
#solution = send_free_location_info.main
#solution = only_move_if_best_match.main
#solution = p_max_with_id.main
#solution = prevent_circle_walking.main
#solution = master.main
#solution = base.main
#solution = basebetter.main
solution = main


#scenario = single_tile_particle_line
#scenario = single_tile_few_particles

#scenario = two_tiles
scenario = single_tile_many_particles
#scenario = concave_shape
#scenario = simple_shape
#scenario = tube_island
#scenario = small_cave
#scenario = strange_cave
#scenario = giant_cave
#scenario = bottle
#scenario = small_bottle
